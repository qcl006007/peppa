(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{516:function(t,a,s){"use strict";s.r(a);var e=s(6),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"二叉树的非递归中序遍历"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二叉树的非递归中序遍历"}},[t._v("#")]),t._v(" 二叉树的非递归中序遍历")]),t._v(" "),s("h2",{attrs:{id:"快速排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#快速排序"}},[t._v("#")]),t._v(" 快速排序")]),t._v(" "),s("h2",{attrs:{id:"判断给定二叉树是不是完全二叉树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#判断给定二叉树是不是完全二叉树"}},[t._v("#")]),t._v(" 判断给定二叉树是不是完全二叉树")]),t._v(" "),s("p",[t._v("首先要明确完全二叉树的概念，甚至满二叉树的概念")]),t._v(" "),s("p",[t._v("完全二叉树：设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到最大个数，\n第 h 层所有的结点都连续集中在最左边;")]),t._v(" "),s("p",[t._v("满二叉树：深度为k且有2^k-1个结点的二叉树称为满二叉树;")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])])}),[],!1,null,null,null);a.default=r.exports}}]);