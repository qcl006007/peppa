(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{507:function(a,t,e){"use strict";e.r(t);var r=e(6),n=Object(r.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"依赖包管理工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#依赖包管理工具"}},[a._v("#")]),a._v(" 依赖包管理工具")]),a._v(" "),e("p",[a._v("对于现在的前端开发，大多数情况下我们需要借助各种各样的工具包来实现特定功能。目前比较流行的包管理工具有 npm, yarn, tink.")]),a._v(" "),e("p",[a._v("对于不同的开发场景，选择适合的管理工具会事半功倍，我们来分析一下各自的优缺点：")]),a._v(" "),e("p",[a._v("npm 是一个相对历史悠久的包管理工具，而yarn是在近些年由Facebook联合开发出的新一代包管理工具，致力于解决npm中存在的一些问题。")]),a._v(" "),e("h3",{attrs:{id:"命令行比较"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#命令行比较"}},[a._v("#")]),a._v(" 命令行比较")]),a._v(" "),e("p",[e("img",{attrs:{src:"/images/package_01.png",alt:""}})]),a._v(" "),e("p",[a._v("npm CLI的一些出色功能")]),a._v(" "),e("ol",[e("li",[a._v("其中许多功能都必须与npx结合使用，npx是用于执行Node包的工具。")]),a._v(" "),e("li",[a._v("Shell 自动回退")])]),a._v(" "),e("p",[a._v("Yarn的CLI的一些出色功能")]),a._v(" "),e("ol",[e("li",[a._v("工作区概念：它是与Monorepo概念紧密相关的功能，Monorepo概念是一种软件开发策略，可鼓励将各种项目的代码存储在同一存储库中。 工作区很有用，因为它们使开发人员可以将每个项目依赖项包含在单个工作区中（再加上一个单独的锁定文件将它们全部规则化）。")]),a._v(" "),e("li",[a._v("交互式升级也是一个简洁的小功能。")])]),a._v(" "),e("h3",{attrs:{id:"依赖项的缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#依赖项的缓存"}},[a._v("#")]),a._v(" 依赖项的缓存")]),a._v(" "),e("p",[a._v("不少开发者认为 yarn 会缓存下载过的依赖项，而npm每次重新下载，实际上，npm在每次安装依赖项的时候也会尝试使用缓存，或者通过一些config告诉npm优先使用缓存。")]),a._v(" "),e("h3",{attrs:{id:"性能比较"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#性能比较"}},[a._v("#")]),a._v(" 性能比较")]),a._v(" "),e("p",[a._v("yarn在刚推出时，安装依赖的性能是要远高于npm的，然而Npm在其5，6版本已经对性能做了很大的改进，从如下的对比可以看出：\n"),e("img",{attrs:{src:"/images/package_02.png",alt:""}}),a._v("\n尽管yarn仍然比npm快，但它们可以说是处在一个数量级上的。")]),a._v(" "),e("h3",{attrs:{id:"升级依赖包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#升级依赖包"}},[a._v("#")]),a._v(" 升级依赖包")]),a._v(" "),e("p",[a._v("yarn 和 npm 使用方式基本相同，分为升级全部依赖和指定依赖。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("yarn update\n\nyarn update [package-name]\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("npm update\n\nnpm update [package-name]\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("h3",{attrs:{id:"依赖版本控制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#依赖版本控制"}},[a._v("#")]),a._v(" 依赖版本控制")]),a._v(" "),e("p",[a._v("目前yarn 和 npm 都通过lock 文件来描述依赖包的准确版本，这有利于保持开发环境的一致性，利于devops的集成。")]),a._v(" "),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[a._v("#")]),a._v(" 参考")]),a._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://www.whitesourcesoftware.com/free-developer-tools/blog/npm-vs-yarn-which-should-you-choose/",target:"_blank",rel:"noopener noreferrer"}},[a._v("NPM vs. Yarn: Which Package Manager Should You Choose?"),e("OutboundLink")],1)])]),a._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://blog.npmjs.org/",target:"_blank",rel:"noopener noreferrer"}},[a._v("npm官网"),e("OutboundLink")],1)])]),a._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://medium.com/@proustibat/npm-5-npm-6-yarn-real-world-installation-times-comparisons-a0821e592bcc",target:"_blank",rel:"noopener noreferrer"}},[a._v("NPM 5, NPM 6, Yarn: real world installation times comparisons"),e("OutboundLink")],1)])])])])}),[],!1,null,null,null);t.default=n.exports}}]);